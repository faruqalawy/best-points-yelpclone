<% layout('layouts/app') %>

<h1>All Places</h1>
<div id="mapContainer" style="widht: 100%; height: 500px; margin-bottom: 5%;"></div>
<% for (const place of places) { %>
<div class="card mb-3">
  <div class="row">
    <div class="col-md-4">
      <% if (place.images.length) {%>
      <img
        src="/images/<%= place.images[0].filename %>"
        alt="<%= place.title %>"
        class="img-fluid"
      />
      <% } else { %>
      <img
        src="https://cdn1-production-images-kly.akamaized.net/J_qaSn7xpC5d-kbHx-wCsOiFsuY=/800x450/smart/filters:quality(75):strip_icc():format(webp)/kly-media-production/medias/4770934/original/018943800_1710311605-mountains-8451480_1280.jpg"
        alt="<%= place.title %>"
        class="img-fluid"
      />
      <% } %>
    </div>
    <div class="col-md-8">
      <div class="card-body">
        <h5 class="card-title"><%= place.title %></h5>
        <p class="card-text"><%= place.description %></p>
        <p class="card-text">
          <small class="text-secondary"><%= place.location %></small>
        </p>
        <a href="/places/<%= place._id %>" class="btn btn-primary"
          >view <%= place.title %></a
        >
      </div>
    </div>
  </div>
</div>
<% } %>

<script>
  const clusteredPlaces = <%- clusteredPlaces %>;
</script>

<script>
  function startClustering(map, data) {
    // First we need to create an array of DataPoint objects,
    // for the ClusterProvider
    var dataPoints = data.map(function (item) {
      return new H.clustering.DataPoint(item.latitude, item.longitude);
    });

    // Create a clustering provider with custom options for clusterizing the input
    var clusteredDataProvider = new H.clustering.Provider(dataPoints, {
      clusteringOptions: {
        // Maximum radius of the neighbourhood
        eps: 32,
        // minimum weight of points required to form a cluster
        minWeight: 2,
      },
    });

    // Create a layer tha will consume objects from our clustering provider
    var clusteringLayer = new H.map.layer.ObjectLayer(clusteredDataProvider);

    // To make objects from clustering provder visible,
    // we need to add our layer to the map
    map.addLayer(clusteringLayer);
  }

  const platform = new H.service.Platform({
    apikey: "cKKA1D0ftrVJs4QkN-6rCiVWIOiCgsvi3UEVAjhWqAs",
  });
  const defaultLayers = platform.createDefaultLayers();
  const map = new H.Map(
    document.getElementById("mapContainer"),
    defaultLayers.vector.normal.map,
    {
      zoom: 4,
      center: {lat: -0.9730197, lng: 116.7034266},
    }
  );
  const ui = H.ui.UI.createDefault(map, defaultLayers, "en-US");
  const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

  startClustering(map, clusteredPlaces);
</script>
